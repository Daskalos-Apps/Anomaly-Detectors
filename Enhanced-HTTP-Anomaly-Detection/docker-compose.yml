version: '3.8'

services:
  # Enhanced Detection Engine
  enhanced-detector:
    build: ./ai-detection-engine
    container_name: enhanced-detector
    volumes:
      - ./models:/models
      - ./data:/data
      - ./output:/output
      - /var/log/apache2:/logs:ro  # Mount Apache logs as read-only
    environment:
      - TF_CPP_MIN_LOG_LEVEL=2
      - PYTHONUNBUFFERED=1
    ports:
      - "8080:8080"  # API port
      - "9090:9090"  # Metrics port
    networks:
      - anomaly-net
    restart: unless-stopped
    command: >
      python enhanced_detector.py
      --mode detect
      --data /logs/access.log
      --model /models/enhanced
      --output /output/detections.csv

  # Federated Learning Agent (Enhanced)
  fl-agent:
    build: ./fl-agent
    container_name: enhanced-fl-agent
    volumes:
      - ./datasets:/data
      - ./models:/models
    environment:
      - AGGREGATOR_URL=http://fl-aggregator:5000
      - CLIENT_ID=enhanced_node_01
      - PYTHONUNBUFFERED=1
    depends_on:
      - fl-aggregator
    networks:
      - anomaly-net
    restart: unless-stopped

  # Federated Learning Aggregator
  fl-aggregator:
    build: ./fl-aggregator
    container_name: enhanced-fl-aggregator
    volumes:
      - ./global_model:/model
    environment:
      - PYTHONUNBUFFERED=1
      - NUM_ROUNDS=100
      - MIN_CLIENTS=2
    ports:
      - "5000:5000"  # FL aggregation port
    networks:
      - anomaly-net
    restart: unless-stopped

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    networks:
      - anomaly-net
    restart: unless-stopped

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    ports:
      - "3000:3000"
    networks:
      - anomaly-net
    restart: unless-stopped

networks:
  anomaly-net:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: